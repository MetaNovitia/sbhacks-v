{"version":3,"sources":["components/Footer/Footer.js","components/Navbar/Navbar.js","components/Home/Project/Report/Report.js","components/Home/Project/Cloud/Cloud.js","components/Home/Project/Project.js","components/Home/Home.js","components/About/About.js","App.js","index.js"],"names":["Footer","Component","this","setState","isOpen","state","react_default","a","createElement","Row","className","Report","props","_this","Object","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","visible","show","bind","assertThisInitialized","c","msg","onDismiss","Alert","color","toggle","React","data","text","value","fontSizeMapper","word","Math","log2","rotate","Cloud","lib_default","Project","inputValue","collapse","activeTab","toggled","toggleTab","setData","processURL","notspam","spam","cloudData","evt","target","tab","startsWith","console","log","split","xhr","XMLHttpRequest","open","send","responseText","alert","input","JSON","parse","items","wordcloud","i","length","x","change","floor","random","other","push","key","id","style","backgroundColor","toString","Col","alt","src","author","image","name","Button","onClick","e","rem","splice","Report_Report","_this2","Container","InputGroup","Input","onChange","updateInputValue","placeholder","InputGroupAddon","addonType","TabContent","TabPane","tabId","Cloud_Cloud_Cloud","Home","y","window","innerHeight","document","documentElement","clientHeight","getElementsByTagName","fluid","height","marginTop","marginBottom","Project_Project_Project","components_Footer_Footer","About","App","Switch","Route","exact","path","component","body","ReactDOM","render","HashRouter","src_App_0","getElementById"],"mappings":"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","file":"static/js/main.ea716346.chunk.js","sourcesContent":["import React, { Component } from 'react';\nimport './Footer.css';\nimport { Row } from 'reactstrap';\n\nclass Footer extends Component {\n\n  toggle() {\n    this.setState({\n      isOpen: !this.state.isOpen\n    });\n  }\n\n  render() {\n    return (\n      <Row className=\"foot\">\n          Copyright Â© 2019 [TEAM NAME]. All Rights Reserved.\n      </Row>\n    );\n  }\n}\n\nexport default Footer;\n\n","import React, { Component } from 'react';\nimport { Link } from 'react-router-dom';\nimport './Navbar.css';\nimport { Navbar, Nav, NavItem, NavLink, Collapse, NavbarToggler} from 'reactstrap';\n\nclass Navigation extends Component {\n  constructor(props) {\n    super(props);\n\n    this.toggle = this.toggle.bind(this);\n    this.state = {\n      isOpen: false\n    };\n\n  }\n\n  toggle() {\n    this.setState({\n      isOpen: !this.state.isOpen\n    });\n  }\n\n  render() {\n    return (\n      <Navbar className=\"\" expand=\"md\">\n        <NavbarToggler onClick={this.toggle} />\n        <Collapse isOpen={this.state.isOpen} navbar>\n          <Nav className=\"ml-auto\" navbar>\n            <NavItem>\n              <NavLink className=\"navlink\" tag={Link} to=\"/About\">About</NavLink>\n            </NavItem>\n          </Nav>\n        </Collapse>\n      </Navbar>\n    );\n  }\n}\n\nexport default Navigation;\n\n","import React from 'react';\nimport { Alert } from 'reactstrap';\n\nexport default class Report extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      visible: true\n    };\n\n    this.show = this.show.bind(this);\n\n    if(props.c===\"success\"){\n        this.msg=\"Successfully marked message as spam!\";\n    }else if(props.c===\"danger\"){\n        this.msg=\"Sorry! You are not authorized to do this!\";\n    }else{\n        this.msg=\"Successfully marked message as not spam!\";\n    }\n\n\n    this.onDismiss = this.onDismiss.bind(this);\n  }\n\n  onDismiss() {\n    this.setState({ visible: false });\n  }\n\n  show(){\n    this.setState({ visible: true });\n  }\n\n  render() {\n    return (\n      <Alert className=\"rep\" color={this.props.c} isOpen={this.state.visible} toggle={this.onDismiss}>\n        {this.msg}\n      </Alert>\n    );\n  }\n}","import React, { Component } from 'react';\nimport WordCloud from 'react-d3-cloud';\nimport './Cloud.css';\n\nconst data = [\n  { text: 'Hey', value: 1000 },\n  { text: 'lol', value: 200 },\n  { text: 'first impression', value: 800 },\n  { text: 'very cool', value: 1000000 },\n  { text: 'duck', value: 10 },\n];\n\nconst fontSizeMapper = word => Math.log2(word.value) * 5;\nconst rotate = word => word.value % 360;\n\nexport default class Cloud extends Component {\n\n  constructor(props){\n  }\n\n  render() {\n    return (\n      <WordCloud\n        data={data}\n        fontSizeMapper={fontSizeMapper}\n        rotate={rotate}\n      />\n    );\n  }\n}","import React, { Component } from 'react';\nimport {\n    Button,\n    Container, \n    InputGroup,\n    InputGroupAddon,\n    Input,\n    Row,\n    Col,\n    TabContent,\n    TabPane} from 'reactstrap';\nimport './Project.css';\nimport Report from \"./Report/Report\";\nimport Cloud from \"./Cloud/Cloud\";\nimport $ from 'jquery';\n\n\nexport default class Project extends Component {\n\n    \n\n\n    constructor(props) {\n        super(props);\n        this.state = {\n            inputValue: '',\n            collapse: false,\n            activeTab: \"1\"\n        };\n        this.toggled = this.toggled.bind(this);\n        this.toggleTab = this.toggleTab.bind(this);\n        this.setData = this.setData.bind(this);\n        this.processURL = this.processURL.bind(this);\n        this.notspam = this.notspam.bind(this);\n        this.spam = this.spam.bind(this);\n        this.data = [];\n        this.cloudData = [];\n\n\n    }\n\n    updateInputValue(evt) {\n        this.setState({\n            inputValue: evt.target.value\n        });\n        \n    }\n\n    toggled() {\n        this.setState({ collapse: !this.state.collapse });\n    }\n\n    toggleTab(tab){\n        if (this.state.activeTab !== tab) {\n            this.setState({\n                activeTab: tab\n            });\n        }\n    }\n\n    processURL(){\n        if( this.state.inputValue.startsWith(\"https://www.youtube.com/watch?v=\") ||\n            this.state.inputValue.startsWith(\"www.youtube.com/watch?v=\")){\n                console.log(\"35.247.16.191:5000/comments/\"+this.state.inputValue.split(\"v=\")[1]);\n                var xhr = new XMLHttpRequest();\n                xhr.open('GET', \"http://35.247.16.191:5000/comments/brmW88EO_cI\", false);\n                xhr.send();\n                console.log(xhr.responseText);\n                \n        }else{\n            alert(\"Please enter a valid YouTube url!\");\n        }\n    }\n\n    setData(input){\n        this.data=[];\n        console.log(\"test\");\n        console.log(input);\n        input = JSON.parse(input);\n\n        console.log(input);\n\n        var data = input.items;\n        \n        this.cloudData = input.wordcloud;\n        for(var i=0; i<data.length; i++){\n\n            if(data.spam){\n                var x = 180;        // brightness\n                var c = 20;         // saturation\n                var y = 255-x-c;\n                var color = [x,x,x];\n\n                var change = Math.floor(Math.random()*3);\n                var other = 2;\n\n                if (change===1){\n                    color[1]=x+20;\n                    if(Math.random()<0.5){\n                        color[0] = x+y;\n                    }else{\n                        color[2] = x+y;\n                    }\n                }else{\n                    if (change===2){\n                        other = 0;\n                    }\n                    color[other] = x+y;\n                    color[change] = Math.floor(Math.random() * y) +x;\n                }\n\n                this.data.push(\n                    <Row    key={data[i].id} \n                            id={data[i].id} \n                            className=\"comment\"\n                            style={{\n                                backgroundColor:    \"rgb(\"+\n                                                    color[0].toString()+\",\"+\n                                                    color[1].toString()+\",\"+\n                                                    color[2].toString()+\n                                                    \")\"\n                            }}>\n                        <Col className=\"photo\">\n                        <img  \n                                alt=\"user img\" \n                                className='userpic' \n                                src={data[i].author.image}/>\n                        </Col>\n                        <Col className=\"bodyuser\">\n                            <div className=\"author\">\n                                {data[i].author.name}\n                            </div>\n                            <div>\n                                {data[i].text}\n                            </div>\n                        </Col>\n                        <Col className=\"spam\">\n                            <div><Button id={data[i].id} className=\"spambtn\" onClick={this.spam}>Spam</Button></div>\n                            <div><Button id={data[i].id} className=\"spambtn\" onClick={this.notspam}>Not Spam</Button></div>\n                        </Col>\n                    </Row>\n                );\n            }\n        }\n            \n\n        this.toggled();\n    }\n\n    spam(e){\n        var rem = e.target.id;\n        for(var i=0; i<this.data.length; i++){\n            if(this.data[i].key===null){\n                this.data.splice(i, 1);\n            }\n        }\n        for(i=0; i<this.data.length; i++){\n            if(this.data[i].key===rem){\n                // send post to python\n                if(true){\n                    this.data.splice(i, 1, <Report key={i.toString()+rem}  c=\"success\"></Report>);\n                }else{\n                    this.data.splice(i, 0, <Report key={i.toString()+rem}  c=\"danger\"></Report>);\n                }\n                break;\n            }\n        }\n        this.toggled();\n    }\n\n    notspam(e){\n        var rem = e.target.id;\n        for(var i=0; i<this.data.length; i++){\n            if(this.data[i].key===null){\n                this.data.splice(i, 1);\n            }\n        }\n        for(i=0; i<this.data.length; i++){\n            if(this.data[i].key===rem){\n                // send post to python\n                this.data.splice(i, 1, <Report key={i.toString()+rem}  c=\"info\"></Report>);\n                break;\n            }\n        }\n        this.toggled();\n    }\n\n    \n\n    \n\n    render() {\n        if (this.data.length===0){\n            return(\n                <Container>\n                \n                <InputGroup>\n                <Input \n                    value={this.state.inputValue} \n                    onChange={evt => this.updateInputValue(evt)}\n                    placeholder=\"Please enter a YouTube url!\"/>\n                <InputGroupAddon addonType=\"append\">\n                    <Button color=\"secondary\" \n                            onClick={this.processURL}>Check Spam\n                    </Button>\n                </InputGroupAddon>\n                </InputGroup>\n                </Container>\n            )\n        }\n        return (\n            <Container>\n                \n                <InputGroup>\n                <Input \n                    value={this.state.inputValue} \n                    onChange={evt => this.updateInputValue(evt)}\n                    placeholder=\"Please enter a YouTube url!\"/>\n                <InputGroupAddon addonType=\"append\">\n                    <Button color=\"secondary\" \n                            onClick={this.processURL}>Check Spam\n                    </Button>\n                </InputGroupAddon>\n            </InputGroup>\n\n            <Container>\n                <Col>\n                    <Button key = {\"1\"}\n                            id = {\"1\"}\n                            onClick={() => { this.toggleTab('1'); }}\n                            className=\"topicbtn\">\n                    Comments\n                    </Button>;\n                    <Button key = {\"2\"}\n                            id = {\"2\"}\n                            onClick={() => { this.toggleTab('2'); }}\n                            className=\"topicbtn\">\n                    Word Cloud\n                    </Button>;\n                    <TabContent activeTab={this.state.activeTab}>\n                        <TabPane tabId=\"1\">\n                            {this.data}\n                        </TabPane>\n                        <TabPane tabId=\"2\">\n                            <Cloud data={this.cloudData}></Cloud>\n                        </TabPane>\n                    </TabContent>\n                </Col>\n            </Container>\n                \n            </Container>\n        );\n    }\n}","import React, { Component } from 'react';\nimport {Container, Row} from 'reactstrap';\nimport NavBar from '../Navbar/Navbar';\nimport Footer from '../Footer/Footer';\nimport Project from './Project/Project';\nimport './Home.css';\n\nexport default class Home extends Component {\n\n    constructor(props){\n        super(props);\n\n        // x = window.innerWidth || \n        //     document.documentElement.clientWidth || \n        //     document.getElementsByTagName('body')[0].clientWidth;\n\n        this.y = window.innerHeight || \n            document.documentElement.clientHeight || \n            document.getElementsByTagName('body')[0].clientHeight;\n    }\n\n    render() {\n        return (\n            <Container \n                    fluid \n                    className=\"center homep\"\n                    style={{\n                        height: this.y.toString() + \"px\"\n                    }}\n            >\n                <div><br/></div>\n                <div\n                    style={{\n                        marginTop: ((this.y-120)/2-80).toString() + \"px\",\n                        marginBottom: ((this.y/3*2)-120).toString() + \"px\"\n                    }}>\n                    <Row    className=\"title center\"\n                    >[Project Name]</Row>\n                    <br/>\n                    <Row    className=\"subtitle center\"\n                    >\n                        by [Team Name]\n                    \n                    </Row>\n                </div>\n\n\n                <Row\n                    style={{\n                        marginBottom: \"50px\"\n                    }}\n                >\n                    <Project></Project>\n                    \n                </Row>\n\n                \n                                \n\n                <Footer></Footer>\n\n\n            </Container>\n        );\n    }\n}","import React, { Component } from 'react';\nimport {\n    Container, } from 'reactstrap';\nimport './About.css';\n\nexport default class About extends Component {\n\n\n    \n\n    render() {\n        return (\n            <Container>\n                \n                Test\n\n            </Container>\n        );\n    }\n}","import React, { Component } from 'react';\nimport Home from './components/Home/Home';\nimport About from './components/About/About';\nimport { Route, Switch } from 'react-router-dom';\nimport './App.css';\n\nclass App extends Component {\n  render() {\n    return (\n        <Switch>\n          <Route exact path='/' component={Home} />\n          <Route path='/About' component={About} />\n        </Switch>\n    );\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { HashRouter } from 'react-router-dom';\nimport './index.css';\nimport 'bootstrap/dist/css/bootstrap.css';\nimport App from './App';\n\ndocument.body.style.backgroundColor = \"rgb(48, 47, 47)\";\n\nReactDOM.render(\n<HashRouter>\n  <App />\n</HashRouter>, document.getElementById('root'));\n"],"sourceRoot":""}